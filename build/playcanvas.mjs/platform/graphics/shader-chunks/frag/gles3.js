var gles3PS = /* glsl */`
layout(location = 0) out highp vec4 pc_fragColor;

#ifndef REMOVE_COLOR_ATTACHMENT_1
#if COLOR_ATTACHMENT_1
layout(location = 1) out highp vec4 pc_fragColor1;
#endif
#endif

#ifndef REMOVE_COLOR_ATTACHMENT_2
#if COLOR_ATTACHMENT_2
layout(location = 2) out highp vec4 pc_fragColor2;
#endif
#endif

#ifndef REMOVE_COLOR_ATTACHMENT_3
#if COLOR_ATTACHMENT_3
layout(location = 3) out highp vec4 pc_fragColor3;
#endif
#endif

#ifndef REMOVE_COLOR_ATTACHMENT_4
#if COLOR_ATTACHMENT_4
layout(location = 4) out highp vec4 pc_fragColor4;
#endif
#endif

#ifndef REMOVE_COLOR_ATTACHMENT_5
#if COLOR_ATTACHMENT_5
layout(location = 5) out highp vec4 pc_fragColor5;
#endif
#endif

#ifndef REMOVE_COLOR_ATTACHMENT_6
#if COLOR_ATTACHMENT_6
layout(location = 6) out highp vec4 pc_fragColor6;
#endif
#endif

#ifndef REMOVE_COLOR_ATTACHMENT_7
#if COLOR_ATTACHMENT_7
layout(location = 7) out highp vec4 pc_fragColor7;
#endif
#endif

#define gl_FragColor pc_fragColor

#define pcFragColor0 pc_fragColor
#define pcFragColor1 pc_fragColor1
#define pcFragColor2 pc_fragColor2
#define pcFragColor3 pc_fragColor3
#define pcFragColor4 pc_fragColor4
#define pcFragColor5 pc_fragColor5
#define pcFragColor6 pc_fragColor6
#define pcFragColor7 pc_fragColor7

#define varying in

#define texture2D texture
#define texture2DBias texture
#define textureCube texture
#define texture2DProj textureProj
#define texture2DLodEXT textureLod
#define texture2DProjLodEXT textureProjLod
#define textureCubeLodEXT textureLod
#define texture2DGradEXT textureGrad
#define texture2DProjGradEXT textureProjGrad
#define textureCubeGradEXT textureGrad

// sample shadows using textureGrad to remove derivatives in the dynamic loops (which are used by
// clustered lighting) - as DirectX shader compiler tries to unroll the loops and takes long time
// to compile the shader. Using textureLod would be even better, but WebGl does not translate it to
// lod instruction for DirectX correctly and uses SampleCmp instead of SampleCmpLevelZero or similar.
#define textureShadow(res, uv) textureGrad(res, uv, vec2(1, 1), vec2(1, 1))

// pass / accept shadow map or texture as a function parameter, on webgl this is simply passed as is
// but this is needed for WebGPU
#define SHADOWMAP_PASS(name) name
#define SHADOWMAP_ACCEPT(name) sampler2DShadow name
#define TEXTURE_PASS(name) name
#define TEXTURE_ACCEPT(name) sampler2D name

#define GL2
#define SUPPORTS_TEXLOD
#define SUPPORTS_MRT
`;

export { gles3PS as default };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2xlczMuanMiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3NyYy9wbGF0Zm9ybS9ncmFwaGljcy9zaGFkZXItY2h1bmtzL2ZyYWcvZ2xlczMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgLyogZ2xzbCAqL2BcbmxheW91dChsb2NhdGlvbiA9IDApIG91dCBoaWdocCB2ZWM0IHBjX2ZyYWdDb2xvcjtcblxuI2lmbmRlZiBSRU1PVkVfQ09MT1JfQVRUQUNITUVOVF8xXG4jaWYgQ09MT1JfQVRUQUNITUVOVF8xXG5sYXlvdXQobG9jYXRpb24gPSAxKSBvdXQgaGlnaHAgdmVjNCBwY19mcmFnQ29sb3IxO1xuI2VuZGlmXG4jZW5kaWZcblxuI2lmbmRlZiBSRU1PVkVfQ09MT1JfQVRUQUNITUVOVF8yXG4jaWYgQ09MT1JfQVRUQUNITUVOVF8yXG5sYXlvdXQobG9jYXRpb24gPSAyKSBvdXQgaGlnaHAgdmVjNCBwY19mcmFnQ29sb3IyO1xuI2VuZGlmXG4jZW5kaWZcblxuI2lmbmRlZiBSRU1PVkVfQ09MT1JfQVRUQUNITUVOVF8zXG4jaWYgQ09MT1JfQVRUQUNITUVOVF8zXG5sYXlvdXQobG9jYXRpb24gPSAzKSBvdXQgaGlnaHAgdmVjNCBwY19mcmFnQ29sb3IzO1xuI2VuZGlmXG4jZW5kaWZcblxuI2lmbmRlZiBSRU1PVkVfQ09MT1JfQVRUQUNITUVOVF80XG4jaWYgQ09MT1JfQVRUQUNITUVOVF80XG5sYXlvdXQobG9jYXRpb24gPSA0KSBvdXQgaGlnaHAgdmVjNCBwY19mcmFnQ29sb3I0O1xuI2VuZGlmXG4jZW5kaWZcblxuI2lmbmRlZiBSRU1PVkVfQ09MT1JfQVRUQUNITUVOVF81XG4jaWYgQ09MT1JfQVRUQUNITUVOVF81XG5sYXlvdXQobG9jYXRpb24gPSA1KSBvdXQgaGlnaHAgdmVjNCBwY19mcmFnQ29sb3I1O1xuI2VuZGlmXG4jZW5kaWZcblxuI2lmbmRlZiBSRU1PVkVfQ09MT1JfQVRUQUNITUVOVF82XG4jaWYgQ09MT1JfQVRUQUNITUVOVF82XG5sYXlvdXQobG9jYXRpb24gPSA2KSBvdXQgaGlnaHAgdmVjNCBwY19mcmFnQ29sb3I2O1xuI2VuZGlmXG4jZW5kaWZcblxuI2lmbmRlZiBSRU1PVkVfQ09MT1JfQVRUQUNITUVOVF83XG4jaWYgQ09MT1JfQVRUQUNITUVOVF83XG5sYXlvdXQobG9jYXRpb24gPSA3KSBvdXQgaGlnaHAgdmVjNCBwY19mcmFnQ29sb3I3O1xuI2VuZGlmXG4jZW5kaWZcblxuI2RlZmluZSBnbF9GcmFnQ29sb3IgcGNfZnJhZ0NvbG9yXG5cbiNkZWZpbmUgcGNGcmFnQ29sb3IwIHBjX2ZyYWdDb2xvclxuI2RlZmluZSBwY0ZyYWdDb2xvcjEgcGNfZnJhZ0NvbG9yMVxuI2RlZmluZSBwY0ZyYWdDb2xvcjIgcGNfZnJhZ0NvbG9yMlxuI2RlZmluZSBwY0ZyYWdDb2xvcjMgcGNfZnJhZ0NvbG9yM1xuI2RlZmluZSBwY0ZyYWdDb2xvcjQgcGNfZnJhZ0NvbG9yNFxuI2RlZmluZSBwY0ZyYWdDb2xvcjUgcGNfZnJhZ0NvbG9yNVxuI2RlZmluZSBwY0ZyYWdDb2xvcjYgcGNfZnJhZ0NvbG9yNlxuI2RlZmluZSBwY0ZyYWdDb2xvcjcgcGNfZnJhZ0NvbG9yN1xuXG4jZGVmaW5lIHZhcnlpbmcgaW5cblxuI2RlZmluZSB0ZXh0dXJlMkQgdGV4dHVyZVxuI2RlZmluZSB0ZXh0dXJlMkRCaWFzIHRleHR1cmVcbiNkZWZpbmUgdGV4dHVyZUN1YmUgdGV4dHVyZVxuI2RlZmluZSB0ZXh0dXJlMkRQcm9qIHRleHR1cmVQcm9qXG4jZGVmaW5lIHRleHR1cmUyRExvZEVYVCB0ZXh0dXJlTG9kXG4jZGVmaW5lIHRleHR1cmUyRFByb2pMb2RFWFQgdGV4dHVyZVByb2pMb2RcbiNkZWZpbmUgdGV4dHVyZUN1YmVMb2RFWFQgdGV4dHVyZUxvZFxuI2RlZmluZSB0ZXh0dXJlMkRHcmFkRVhUIHRleHR1cmVHcmFkXG4jZGVmaW5lIHRleHR1cmUyRFByb2pHcmFkRVhUIHRleHR1cmVQcm9qR3JhZFxuI2RlZmluZSB0ZXh0dXJlQ3ViZUdyYWRFWFQgdGV4dHVyZUdyYWRcblxuLy8gc2FtcGxlIHNoYWRvd3MgdXNpbmcgdGV4dHVyZUdyYWQgdG8gcmVtb3ZlIGRlcml2YXRpdmVzIGluIHRoZSBkeW5hbWljIGxvb3BzICh3aGljaCBhcmUgdXNlZCBieVxuLy8gY2x1c3RlcmVkIGxpZ2h0aW5nKSAtIGFzIERpcmVjdFggc2hhZGVyIGNvbXBpbGVyIHRyaWVzIHRvIHVucm9sbCB0aGUgbG9vcHMgYW5kIHRha2VzIGxvbmcgdGltZVxuLy8gdG8gY29tcGlsZSB0aGUgc2hhZGVyLiBVc2luZyB0ZXh0dXJlTG9kIHdvdWxkIGJlIGV2ZW4gYmV0dGVyLCBidXQgV2ViR2wgZG9lcyBub3QgdHJhbnNsYXRlIGl0IHRvXG4vLyBsb2QgaW5zdHJ1Y3Rpb24gZm9yIERpcmVjdFggY29ycmVjdGx5IGFuZCB1c2VzIFNhbXBsZUNtcCBpbnN0ZWFkIG9mIFNhbXBsZUNtcExldmVsWmVybyBvciBzaW1pbGFyLlxuI2RlZmluZSB0ZXh0dXJlU2hhZG93KHJlcywgdXYpIHRleHR1cmVHcmFkKHJlcywgdXYsIHZlYzIoMSwgMSksIHZlYzIoMSwgMSkpXG5cbi8vIHBhc3MgLyBhY2NlcHQgc2hhZG93IG1hcCBvciB0ZXh0dXJlIGFzIGEgZnVuY3Rpb24gcGFyYW1ldGVyLCBvbiB3ZWJnbCB0aGlzIGlzIHNpbXBseSBwYXNzZWQgYXMgaXNcbi8vIGJ1dCB0aGlzIGlzIG5lZWRlZCBmb3IgV2ViR1BVXG4jZGVmaW5lIFNIQURPV01BUF9QQVNTKG5hbWUpIG5hbWVcbiNkZWZpbmUgU0hBRE9XTUFQX0FDQ0VQVChuYW1lKSBzYW1wbGVyMkRTaGFkb3cgbmFtZVxuI2RlZmluZSBURVhUVVJFX1BBU1MobmFtZSkgbmFtZVxuI2RlZmluZSBURVhUVVJFX0FDQ0VQVChuYW1lKSBzYW1wbGVyMkQgbmFtZVxuXG4jZGVmaW5lIEdMMlxuI2RlZmluZSBTVVBQT1JUU19URVhMT0RcbiNkZWZpbmUgU1VQUE9SVFNfTVJUXG5gO1xuIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLGNBQWUsVUFBVyxDQUFBO0FBQzFCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7Ozs7In0=
